/*
    File: ~/css/index.css
    91.461 Assignment 2: Creating Your First Web Page
    Jason Downing - student at UMass Lowell in 91.461 GUI Programming I
    Contact: jdowning@cs.uml.edu or jason_downing@student.uml.edu
    MIT Licensed - see http://opensource.org/licenses/MIT for details.
    Anyone may freely use this code. Just don't sue me if it breaks stuff.
    Created: September 3rd, 2015.
    Last Updated: September 16th at 4PM

    Note: this is a CSS file for index.html and a few other HTML files also use it.
    All CSS in this file is organized in alphabetical order - as much as possible.
*/

/*
    I found this one this stackoverflow page;  it is used to make the "#About" link in the Nav Bar go all
    the way to the top. I changed it to offset to 70px since that seems to be just enough for this fix to work.
    https://stackoverflow.com/questions/10732690/offsetting-an-html-anchor-to-adjust-for-fixed-header
*/
a.anchor {
  display: block;
  position: relative;
  top: -70px;
  visibility: hidden;
}

body {
  /*
      Background image was found at the following URL (I did not create nor own this image):
      http://wallpaperput.com/wp-content/uploads/2014/10/space-cool-HD-wallpaper.jpg

      The color was found with a Google search for "black color code", and this site was helpful for confirming:
      http://www.rapidtables.com/web/color/RGB_Color.htm
  */
  background-color: #000000;
  background-image: url('../img/space-wallpaper.jpg');
  background-position: center;
  background-repeat: no-repeat;

  /*
        This line came off of Stackoverflow. It works very well. See the first answer from Vashishtha Jogi.
        https://stackoverflow.com/questions/1150163/stretch-and-scale-a-css-image-in-the-background-with-css-only
   */
  background-size: cover;
  margin: 0px;
  padding: 0px;
  height: 100%;
  width: 100%;
  font-family: "Advent Pro";
}

/*
      Added padding / margin for better display.
*/
body > .container {
  padding: 65px 10px 0;
}

body > .row {
  margin: 10px;
}

html {
  min-height: 100%;
  position: relative;
}

/*
  This is to replace <center> tags so the site will validate. I was using <center> tags to make images and
  text appear centered on mobile devices, since the bootstrap grids I setup for mobile make things
  appear on separate lines.
  This post explained how to do so:
  https://stackoverflow.com/questions/7226056/equivalent-to-center-tag-in-css
*/
.center_text_images {
  margin: auto;
  text-align: center;
}

/* The following is for the table in assignment #6 */

/*
    Modifying forms so that input is visible.
*/
input {
  color: black;
}

/*
    This Stackoverflow post explained how to do this:
    https://stackoverflow.com/questions/9686538/align-labels-in-form-next-to-input

    See if there is a better way.
*/
label {
  display: inline-block;
  width: 350px;           /* modified this */
  text-align: right;
}â€‹

/*
    w3schools is so helpful:
    http://www.w3schools.com/css/css_table.asp
*/
.dyn_table {
  border: 1px solid red;
}

.dyn_tr_td {
  background-color: orange;
  border: 3px solid red;
  color: black;
  height: 50px;
  padding: 15px;
  text-align: right;
  vertical-align: bottom;
}


/*
  This chunk contains all the highlight / text related CSS.
  Mostly center / left / right alignment and changing the color / font of text.
*/
.about {
  color: white;
  text-align: center;
}

.center_text {
  color: white;
  text-align: center;
  font-family: "Advent Pro";
  font-weight:900;
  font-size: 200%;
}

.center_text_nohighlight {
  color: black;
  text-align: center;
  font-size: 200%;
}

.center_text_small {
  color: white;
  text-align: center;
  font-family: "Advent Pro";
  font-weight:900;
  font-size: 120%;
}

h1.name {
  color: white;
  text-align: center;
  font-family: "Ubuntu";
  font-size: 750%;
}

.highlight {
  background-color: black;
}

.highlight_red {
  background-color: black;
  color: red;
  font-family: "Righteous";
}

.highlight_centered {
  background-color: black;
  color: white;
  font-family: "Advent Pro";
  font-weight:900;
  font-size: 200%;
  text-align: center;
}

.highlight_centered_margins {
  background-color: black;
  color: white;
  font-family: "Advent Pro";
  font-weight:900;
  font-size: 200%;
  margin: 10px;
  text-align: center;
}

.highlight_left_aligned {
  background-color: black;
  color: white;
  font-family: "Advent Pro";
  font-weight:900;
  font-size: 200%;
  text-align: left;
}

.highlight_right_aligned {
  background-color: black;
  color: white;
  font-family: "Advent Pro";
  font-weight:900;
  font-size: 200%;
  margin-right: -20px;
  text-align: right;
}

.highlight_text_underline {
  background: black;
  font-weight: bold;
  text-decoration: underline;
}

.highlight_text_underline_centered {
  background-color: black;
  color: white;
  font-family: "Advent Pro";
  font-weight:900;
  font-size: 200%;
  text-align: center;
  font-weight: bold;
  text-decoration: underline;
}

.left_align {
  color: white;
  text-align: left;
  font-family: "Advent Pro";
  font-size: 200%;
}

.right_align {
  color: white;
  text-align: left;
  font-family: "Advent Pro";
  font-size: 200%;
}

.white_text {
  background-color: black;
  color: white;
  font-family: "Advent Pro";
  font-size: 200%;
}

/*********************************************************************************************************/
/*
    This was a pretty cool piece of CSS, as it lets you make the dropdown menu open on hover.
    You can also still click on the dropdown title to make it stay open.
    I found it on Stackoverflow here:
    https://stackoverflow.com/questions/8878033/how-to-make-twitter-bootstrap-menu-dropdown-on-hover-rather-than-click

    Note: everything below here is from that post.
 */
.dropdown-menu .sub-menu {
    left: 100%;
    position: absolute;
    top: 0;
    visibility: hidden;
    margin-top: -1px;
}

.dropdown-menu li:hover .sub-menu {
    visibility: visible;
}

.dropdown:hover .dropdown-menu {
    display: block;
}

.nav-tabs .dropdown-menu, .nav-pills .dropdown-menu, .navbar .dropdown-menu {
    margin-top: 0;
}

.navbar .sub-menu:before {
    border-bottom: 7px solid transparent;
    border-left: none;
    border-right: 7px solid rgba(0, 0, 0, 0.2);
    border-top: 7px solid transparent;
    left: -7px;
    top: 10px;
}
.navbar .sub-menu:after {
    border-top: 6px solid transparent;
    border-left: none;
    border-right: 6px solid #fff;
    border-bottom: 6px solid transparent;
    left: 10px;
    top: 11px;
    left: -6px;
}

.sidebar-nav {
    padding: 9px 0;
}